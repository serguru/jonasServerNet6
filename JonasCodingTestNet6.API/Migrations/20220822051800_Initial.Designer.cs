// <auto-generated />
using System;
using JonasCodingTestNet6.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JonasCodingTestNet6.API.Migrations
{
    [DbContext(typeof(CompanyInfoContext))]
    [Migration("20220822051800_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("JonasCodingTestNet6.API.Entities.ArSubledger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Active")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArSubledgerCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condemned")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Excellent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fair")
                        .HasColumnType("TEXT");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Good")
                        .HasColumnType("TEXT");

                    b.Property<string>("Inactive")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Poor")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArSubledgerCode")
                        .IsUnique();

                    b.HasIndex("CompanyId");

                    b.ToTable("ArSubledgers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = "Yes",
                            ArSubledgerCode = "ArSubledgerCode1",
                            CompanyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = "Yes",
                            ArSubledgerCode = "ArSubledgerCode2",
                            CompanyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = "Yes",
                            ArSubledgerCode = "ArSubledgerCode3",
                            CompanyId = 2
                        },
                        new
                        {
                            Id = 4,
                            Active = "Yes",
                            ArSubledgerCode = "ArSubledgerCode4",
                            CompanyId = 2
                        });
                });

            modelBuilder.Entity("JonasCodingTestNet6.API.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentCompanyCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCode")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyCode = "CompanyCode1",
                            CompanyName = "CompanyName1"
                        },
                        new
                        {
                            Id = 2,
                            CompanyCode = "CompanyCode2",
                            CompanyName = "CompanyName2"
                        },
                        new
                        {
                            Id = 3,
                            CompanyCode = "CompanyCode3",
                            CompanyName = "CompanyName3"
                        });
                });

            modelBuilder.Entity("JonasCodingTestNet6.API.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeStatus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            EmployeeCode = "EmployeeCode1"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            EmployeeCode = "EmployeeCode2"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            EmployeeCode = "EmployeeCode3"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            EmployeeCode = "EmployeeCode4"
                        });
                });

            modelBuilder.Entity("JonasCodingTestNet6.API.Entities.ArSubledger", b =>
                {
                    b.HasOne("JonasCodingTestNet6.API.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("JonasCodingTestNet6.API.Entities.Employee", b =>
                {
                    b.HasOne("JonasCodingTestNet6.API.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
